[{"/home/clinux/Desktop/pern-stack/client/src/reportWebVitals.js":"1","/home/clinux/Desktop/pern-stack/client/src/components/InputTodo.js":"2","/home/clinux/Desktop/pern-stack/client/src/App.js":"3","/home/clinux/Desktop/pern-stack/client/src/components/ListTodo.js":"4","/home/clinux/Desktop/pern-stack/client/src/index.js":"5","/home/clinux/Desktop/pern-stack/client/src/components/EditTodo.js":"6"},{"size":362,"mtime":1607963392533,"results":"7","hashOfConfig":"8"},{"size":964,"mtime":1607971383581,"results":"9","hashOfConfig":"8"},{"size":351,"mtime":1608028395726,"results":"10","hashOfConfig":"8"},{"size":1518,"mtime":1608028741937,"results":"11","hashOfConfig":"8"},{"size":268,"mtime":1607964386904,"results":"12","hashOfConfig":"8"},{"size":2337,"mtime":1608030815952,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mowxxx",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/clinux/Desktop/pern-stack/client/src/reportWebVitals.js",[],"/home/clinux/Desktop/pern-stack/client/src/components/InputTodo.js",["29"],"import React, { Fragment, useState } from \"react\";\n\nconst InputTodo = () => {\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { description };\n      const response = await fetch(\"http://localhost:5000/todos\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"text-center mt-5\">Pern Todo List</h1>\n      <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button className=\"btn btn-success\">Add</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default InputTodo;\n","/home/clinux/Desktop/pern-stack/client/src/App.js",[],"/home/clinux/Desktop/pern-stack/client/src/components/ListTodo.js",["30"],"/home/clinux/Desktop/pern-stack/client/src/index.js",["31"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","/home/clinux/Desktop/pern-stack/client/src/components/EditTodo.js",["32"],"import React, { useState } from \"react\";\n\nconst EditTodo = ({ todo }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  // edit description function\n  const updateDescription = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { description };\n      const response = await fetch(\n        `http://localhost:5000/todos/${todo.todo_id}`,\n        {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        }\n      );\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"btn btn-warning\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        Edit\n      </button>\n\n      <div\n        className=\"modal\"\n        id={`id${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Edit Todo</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                data-dismiss=\"modal\"\n                onClick={(e) => updateDescription(e)}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditTodo;\n",{"ruleId":"33","severity":1,"message":"34","line":10,"column":13,"nodeType":"35","messageId":"36","endLine":10,"endColumn":21},{"ruleId":"33","severity":1,"message":"37","line":12,"column":13,"nodeType":"35","messageId":"36","endLine":12,"endColumn":23},{"ruleId":"33","severity":1,"message":"38","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":23},{"ruleId":"33","severity":1,"message":"34","line":11,"column":13,"nodeType":"35","messageId":"36","endLine":11,"endColumn":21},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","'reportWebVitals' is defined but never used."]